---
- name: Set upgrade from path
  set_fact:
    tomcat_upgrade_from_path: "{{ tomcat_stat_previous_version.stat.lnk_target }}"
  when:
    - tomcat_stat_previous_version.stat.islnk is defined
    - tomcat_stat_previous_version.stat.islnk | bool
    - tomcat_upgrade_from_path != tomcat_stat_previous_version.stat.lnk_target

- name: Check if old tomcat path is present
  stat:
    path: "{{ tomcat_upgrade_from_path }}"
  register: tomcat_stat_upgrade_from_path

- name: Exit if previous tomcat path is not present or is the same version
  block:
    - name: Exit if previous tomcat path is not present or is the same version
      debug:
        msg: Old tomcat version is not present or is the same version

    - meta: end_play
  when: not tomcat_stat_upgrade_from_path.stat.exists or tomcat_upgrade_from_path == tomcat_install_path

- name: Find conf in old tomcat path
  find:
    paths: "{{ tomcat_upgrade_from_path }}/conf"
    file_type: any
  register: tomcat_find_upgrade_from_path_conf

- name: Copy conf from old to new - no force
  copy:
    src: "{{ item }}"
    dest: "{{ tomcat_install_path }}/conf/"
    remote_src: yes
    owner: root
    group: "{{ tomcat_group }}"
    mode: o-rwx
    force: no
  loop: "{{ tomcat_find_upgrade_from_path_conf.files | map(attribute='path') | list }}"
  notify: restart tomcat

- name: Copy conf from old to new - force
  copy:
    src: "{{ tomcat_upgrade_from_path }}/conf/{{ item }}"
    dest: "{{ tomcat_install_path }}/conf/"
    remote_src: yes
    owner: root
    group: "{{ tomcat_group }}"
    mode: o-rwx
    force: yes
  loop: "{{ tomcat_upgrade_conf_copy_force }}"
  notify: restart tomcat

- name: Find lib in old tomcat path
  find:
    paths: "{{ tomcat_upgrade_from_path }}/lib"
    file_type: any
  register: tomcat_find_upgrade_from_path_lib

- name: Copy lib from old to new - no force
  copy:
    src: "{{ item }}"
    dest: "{{ tomcat_install_path }}/lib/"
    remote_src: yes
    owner: root
    group: "{{ tomcat_group }}"
    mode: o-rwx
    force: no
  loop: "{{ tomcat_find_upgrade_from_path_lib.files | map(attribute='path') | list }}"
  notify: restart tomcat

- name: Find deployed webapps
  find:
    paths: "{{ tomcat_upgrade_from_path }}/webapps"
    file_type: file
  register: tomcat_find_upgrade_from_path_webapps

- name: Copy webapps from old to new
  copy:
    src: "{{ item }}"
    dest: "{{ tomcat_install_path }}/webapps/"
    remote_src: yes
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: o-rwx
  loop: "{{ tomcat_find_upgrade_from_path_webapps.files | map(attribute='path') | list }}"
