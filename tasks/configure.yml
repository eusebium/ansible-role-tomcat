---
- name: Install some prerequisite packages
  ansible.builtin.package:
    name:
      - python3-lxml
    state: present

- name: Configure service file {{ tomcat_service_name }}.service
  ansible.builtin.template:
    src: "{{ tomcat_template_systemd_service }}"
    dest: "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"
    owner: root
    group: root
    mode: 0644
  notify: Restart tomcat

- name: Enable tomcat service on startup
  ansible.builtin.service:
    name: "{{ tomcat_service_name }}"
    enabled: "{{ tomcat_service_enabled_on_startup | ternary(true, false) }}"
    daemon_reload: yes

- name: Configure temporary .server.xml configuration file. This one will be copied over server.xml
  block:
    - name: Setup temp server.xml
      ansible.builtin.template:
        src: "{{ tomcat_template_server }}"
        dest: "{{ tomcat_install_path }}/conf/.server.xml"
        mode: 0640
      changed_when: false

    - name: Set server engine extra conf
      ansible.builtin.xml:
        path: "{{ tomcat_install_path }}/conf/.server.xml"
        xpath: '//Service/Engine[@name="Catalina"]'
        attribute: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ tomcat_server_engine_extra_conf }}"
      changed_when: false

    - name: Set HTTP connector extra conf
      ansible.builtin.xml:
        path: "{{ tomcat_install_path }}/conf/.server.xml"
        xpath: '//Service/Connector[@protocol="HTTP/1.1"]'
        attribute: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ tomcat_server_http_extra_conf }}"
      changed_when: false

    - name: Set AJP connector extra conf
      ansible.builtin.xml:
        path: "{{ tomcat_install_path }}/conf/.server.xml"
        xpath: '//Service/Connector[@protocol="AJP/1.3"]'
        attribute: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ tomcat_server_ajp_extra_conf }}"
      when:
        - tomcat_ajp_enabled
      changed_when: false

    - name: Copy temp server.xml
      ansible.builtin.copy:
        src: "{{ tomcat_install_path }}/conf/.server.xml"
        dest: "{{ tomcat_install_path }}/conf/server.xml"
        remote_src: yes
        force: yes
        mode: preserve
      notify: Restart tomcat

- name: Get roles from users roles
  ansible.builtin.set_fact:
    tomcat_users_roles: "{{ tomcat_users | map(attribute='roles') | list }}"

- name: Set all roles to be created
  ansible.builtin.set_fact:
    tomcat_user_roles: "{{ (tomcat_user_roles + tomcat_users_roles) | unique }}"

- name: Setup tomcat-users.xml
  ansible.builtin.template:
    src: "{{ tomcat_template_users }}"
    dest: "{{ tomcat_install_path }}/conf/tomcat-users.xml"
    mode: 0640
  notify: Restart tomcat

- name: Configure setenv.sh
  ansible.builtin.template:
    src: "{{ tomcat_template_setenv }}"
    dest: "{{ tomcat_install_path }}/bin/setenv.sh"
    mode: 0750
  notify: Restart tomcat

- name: Create /var/log/{{ tomcat_service_name }} directory
  ansible.builtin.file:
    path: /var/log/{{ tomcat_service_name }}
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user_group }}"
    mode: 0750

- name: Set logs directory in /var/log
  block:
    - name: Stat original logs directory
      ansible.builtin.stat:
        path: "{{ tomcat_install_path }}/logs"
      register: tomcat_stat_original_logs_path

    - name: Copy logs to new logs directory
      ansible.builtin.copy:
        src: "{{ tomcat_install_path }}/logs/"
        dest: /var/log/{{ tomcat_service_name }}/
        remote_src: yes
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_user_group }}"
        mode: 0750
      when:
        - tomcat_stat_original_logs_path.stat.isdir

    - name: Remove original logs directory
      ansible.builtin.file:
        path: "{{ tomcat_install_path }}/logs/"
        state: absent
      when:
        - tomcat_stat_original_logs_path.stat.isdir

    - name: Create link to new log directory
      ansible.builtin.file:
        src: /var/log/{{ tomcat_service_name }}
        dest: "{{ tomcat_install_path }}/logs"
        state: link
  notify: Restart tomcat
